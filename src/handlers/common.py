from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.enums import ParseMode

from .base import BaseHandler
from src.keyboards.reply import HubMenu
from .register import RegisterHandler


class CommonHandler(BaseHandler):
    def register_handler(self) -> None:
        self.router.message.register(self.start_cmd, CommandStart())


    async def start_cmd(self, message: Message, state: FSMContext) -> None:
        """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ start"""
        user_id = message.from_user.id

        if self.db.register.checker(user_id):
            """–Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π"""
            if self.db.register.get_type(user_id) == 'student':
                form = self.db.register.get_class(user_id)
                prompt = (f"üëãüèª –í—ñ—Ç–∞—î–º–æ –≤ —á–∞—Ç-–±–æ—Ç—ñ <b>–ë–µ—Ä–µ–∑–∞–Ω—Å—å–∫–æ–≥–æ –ª—ñ—Ü–µ—é ‚Ññ3</b>\n\n"
                          f"–í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —è–∫ —É—á–µ–Ω—å <b>{form}</b> –∫–ª–∞—Å—É.\n\n"
                          f"–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register")
            else:
                teacher_name = self.db.register.get_teacher_name(user_id)
                prompt = (f"üëãüèª –í—ñ—Ç–∞—î–º–æ –≤ —á–∞—Ç-–±–æ—Ç—ñ <b>–ë–µ—Ä–µ–∑–∞–Ω—Å—å–∫–æ–≥–æ –ª—ñ—Ü–µ—é ‚Ññ3</b>\n\n"
                          f"–í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —è–∫ –≤—á–∏—Ç–µ–ª—å <b>{teacher_name}</b>\n\n"
                          f"–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register")

            await message.answer(
                prompt,
                reply_markup=HubMenu().get_keyboard(),
                parse_mode=ParseMode.HTML
            )

        else:
            """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é"""
            await message.answer(
                "üëãüèª –í—ñ—Ç–∞—î–º–æ –≤ —á–∞—Ç-–±–æ—Ç—ñ <b>–ë–µ—Ä–µ–∑–∞–Ω—Å—å–∫–æ–≥–æ –ª—ñ—Ü–µ—é ‚Ññ3</b>\n\n"
                "–ë—É–¥—å-–ª–∞—Å–∫–∞, –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—è, —â–æ–± —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –≤—Å—ñ–º–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞\n\n"
                "ps: üì¢ –ë–æ—Ç –Ω–µ–æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π. –ô–æ–≥–æ –∑—Ä–æ–±–∏–≤ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π —É—á–µ–Ω—å, –∞ –Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è ‚Äî —Ç–æ–º—É —è–∫—â–æ —â–æ—Å—å –≥–ª—é—á–∏—Ç—å, "
                "–Ω–µ –ø–∏—à—ñ—Ç—å –∑–∞–≤—É—á—É xd. (–æ–≤–Ω–µ—Ä @noinsts)",
                parse_mode=ParseMode.HTML
            )
            await RegisterHandler().start_register(message, state)
