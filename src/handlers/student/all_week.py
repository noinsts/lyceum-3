from collections import defaultdict

from aiogram import F
from aiogram.types import Message
from aiogram.enums import ParseMode

from ..base import BaseHandler
from src.utils import JSONLoader
from src.db.connector import DBConnector


class AllWeekHandler(BaseHandler):
    def register_handler(self):
        self.router.message.register(self.all_week, F.text == 'üìù –†–æ–∑–∫–ª–∞–¥ –Ω–∞ –≤–µ—Å—å —Ç–∏–∂–¥–µ–Ω—å')

    async def all_week(self, message: Message, db: DBConnector) -> None:
        """
        –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç—É —Ä–æ–∑–∫–ª–∞–¥—É –Ω–∞ –≤–µ—Å—å —Ç–∏–∂–¥–µ–Ω—å
        """

        user_class = await db.register.get_form(message.from_user.id)
        results = self.sheet.student.get_lessons(user_class)

        # —Å–æ—Ä—Ç—É—î–º–æ –ø–æ –¥–Ω—è—Ö
        lessons_by_day = defaultdict(list)
        for day, number, subject, teacher in results:
            lessons_by_day[day].append((number, subject, teacher))

        # –ø–æ—á–∞—Ç–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        prompt = f"<b>–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫—ñ–≤ {user_class} –∫–ª–∞—Å—É</b>\n"

        # –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª –∑ –æ—Ä—É–¥–Ω–∏–º–∏ –≤—ñ–¥–º—ñ–Ω–∫–∞–º–∏
        vocative_names = JSONLoader("settings/vocative_teacher_name.json")

        for day, lessons in lessons_by_day.items():
            prompt += f"\n<b>{day.capitalize()}</b>\n"
            for number, subject, teacher in lessons:
                # –ø–∞—Ä—Å–∏–º–æ –¥–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ç–∏–∂–Ω—è
                subject, teacher = self.wf.student(subject, teacher)

                if not subject:
                    continue

                # –º–∞—Å–∏–≤ –∑ —ñ–º–µ–Ω–∞ –≤—á–∏—Ç–µ–ª—ñ–≤
                teacher_names = []

                # TODO: –≤–∏–Ω–µ—Å—Ç–∏ –ø–∞—Ä—Å–µ—Ä –≤ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª
                # –ø–∞—Ä—Å–æ–º–æ —ñ–º–µ–Ω–∞ –≤—á–∏—Ç–µ–ª—ñ–≤ –∑–∞ –æ—Ä—É–¥–Ω–∏–º –≤—ñ–¥–º—ñ–Ω–∫–æ–º
                for t in map(str.strip, teacher.split(',')):
                    voc_name = vocative_names.get(t)
                    teacher_names.append(voc_name if voc_name else t)

                teacher_string = " —Ç–∞ ".join(teacher_names)
                prompt += f"<b>{number}</b>: {subject} –∑ {teacher_string}\n"

        # –≤–∏–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ
        await message.answer(
            prompt,
            parse_mode=ParseMode.HTML
        )
