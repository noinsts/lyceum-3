from aiogram import F
from aiogram.enums import ParseMode
from aiogram.types import Message

from .base import BaseHandler

class TeacherHandler(BaseHandler):
    def __init__(self):
        super().__init__()
        self.WEEKEND_PROMPT = "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π! –ß–æ–º—É –≤–∏ –¥—É–º–∞—î—Ç–µ –ø—Ä–æ —Ä–æ–±–æ—Ç—É? –ú–æ–∂–µ –∫—Ä–∞—â–µ –≤—ñ–¥–ø–æ—á–∏—Ç–∏ üôÇ‚Äç‚ÜïÔ∏è"
        self.WEEEKEND_STICKER = "CAACAgIAAxkBAAEOZ1doFUn9Y0TR-qURiQeEb7HZdGC2qQACOjMAAlG5gEjH0Q7wxWFwrDYE"
        self.HAPPY_GUY = "CAACAgIAAxkBAAEOZ1loFUxiV3fJxTbJ0Q6iD6LDAkhsxwACBTgAAp17sEknYmmEwwt6pTYE"


    def register_handler(self) -> None:
        self.router.message.register(self.my_post, F.text == 'üö¶ –ú—ñ–π –ø–æ—Å—Ç')


    async def my_post(self, message: Message) -> None:
        """–û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ üö¶ –ú—ñ–π –ø–æ—Å—Ç"""
        self.db.register.update_udata(message.from_user)  # –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –Ω—ñ–∫–Ω–µ–π–º

        week_name: int = message.date.astimezone(self.kyiv_tz).weekday()

        # –æ–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ—ó, —è–∫—â–æ –¥–µ–Ω—å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è - –≤–∏—Ö—ñ–¥–Ω–∏–π
        if week_name > 4:
            await message.answer(self.WEEKEND_PROMPT)
            await message.answer_sticker(self.WEEEKEND_STICKER)
            return

        week_name: str = self.cfg._config.get(str(week_name))
        teacher_name = self.db.register.get_teacher_name(message.from_user.id)

        if not teacher_name:
            await message.answer(
                "‚ö†Ô∏è <b>–í–∏–±–∞—á—Ç–µ, –≤–∞—à–æ–≥–æ —ñ–º–µ–Ω—ñ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –±—É–¥—å-–ª–∞—Å–∫–∞, "
                "—Å–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–µ—Ä–µ—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /register</b>",
                parse_mode=ParseMode.HTML
            )
            return

        result = self.db.teacher.get_post(week_name, teacher_name)

        if not result:
            await message.answer("–í–∞–º –ø–æ—â–∞—Å—Ç–∏–ª–æ! –°—å–æ–≥–æ–¥–Ω—ñ –≤–∏ –Ω–µ –ø—Ä–∏–≤'—è–∑–∞–Ω—ñ –¥–æ –ø–æ—Å—Ç—É, –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–æ—á–∏—Ç–∏")
            await message.answer_sticker(self.HAPPY_GUY)
            return

        await message.answer(
            f"–ù–µ –ø–æ—â–∞—Å—Ç–∏–ª–æ \n\n"
            f"–°—å–æ–≥–æ–¥–Ω—ñ —É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–æ–≤–µ —á–µ—Ä–≥—É–≤–∞–Ω–Ω—è –Ω–∞ \"<b>{result}</b>\"",
            parse_mode=ParseMode.HTML
        )
